// source: generic/events/v1/events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var generic_events_v1_notifications_pb = require('../../../generic/events/v1/notifications_pb.js');
goog.object.extend(proto, generic_events_v1_notifications_pb);
var generic_events_v1_system_pb = require('../../../generic/events/v1/system_pb.js');
goog.object.extend(proto, generic_events_v1_system_pb);
var generic_events_v1_todo_pb = require('../../../generic/events/v1/todo_pb.js');
goog.object.extend(proto, generic_events_v1_todo_pb);
goog.exportSymbol('proto.generic.events.v1.AggregateType', null, global);
goog.exportSymbol('proto.generic.events.v1.EventType', null, global);
goog.exportSymbol('proto.generic.events.v1.EventType.CodeCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.generic.events.v1.EventType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.generic.events.v1.EventType.oneofGroups_);
};
goog.inherits(proto.generic.events.v1.EventType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.generic.events.v1.EventType.displayName = 'proto.generic.events.v1.EventType';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.generic.events.v1.EventType.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.generic.events.v1.EventType.CodeCase = {
  CODE_NOT_SET: 0,
  SYSTEM_CODE: 1,
  NOTIFICATION_CODE: 2,
  TODO_EVENT_CODE: 3
};

/**
 * @return {proto.generic.events.v1.EventType.CodeCase}
 */
proto.generic.events.v1.EventType.prototype.getCodeCase = function() {
  return /** @type {proto.generic.events.v1.EventType.CodeCase} */(jspb.Message.computeOneofCase(this, proto.generic.events.v1.EventType.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.generic.events.v1.EventType.prototype.toObject = function(opt_includeInstance) {
  return proto.generic.events.v1.EventType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.generic.events.v1.EventType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.generic.events.v1.EventType.toObject = function(includeInstance, msg) {
  var f, obj = {
    systemCode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    notificationCode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    todoEventCode: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.generic.events.v1.EventType}
 */
proto.generic.events.v1.EventType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.generic.events.v1.EventType;
  return proto.generic.events.v1.EventType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.generic.events.v1.EventType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.generic.events.v1.EventType}
 */
proto.generic.events.v1.EventType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.generic.events.v1.SystemEventCode} */ (reader.readEnum());
      msg.setSystemCode(value);
      break;
    case 2:
      var value = /** @type {!proto.generic.events.v1.NotificationEventCode} */ (reader.readEnum());
      msg.setNotificationCode(value);
      break;
    case 3:
      var value = /** @type {!proto.generic.events.v1.TodoEventCode} */ (reader.readEnum());
      msg.setTodoEventCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.generic.events.v1.EventType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.generic.events.v1.EventType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.generic.events.v1.EventType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.generic.events.v1.EventType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.generic.events.v1.SystemEventCode} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.generic.events.v1.NotificationEventCode} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.generic.events.v1.TodoEventCode} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional SystemEventCode system_code = 1;
 * @return {!proto.generic.events.v1.SystemEventCode}
 */
proto.generic.events.v1.EventType.prototype.getSystemCode = function() {
  return /** @type {!proto.generic.events.v1.SystemEventCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.generic.events.v1.SystemEventCode} value
 * @return {!proto.generic.events.v1.EventType} returns this
 */
proto.generic.events.v1.EventType.prototype.setSystemCode = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.generic.events.v1.EventType.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.generic.events.v1.EventType} returns this
 */
proto.generic.events.v1.EventType.prototype.clearSystemCode = function() {
  return jspb.Message.setOneofField(this, 1, proto.generic.events.v1.EventType.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.generic.events.v1.EventType.prototype.hasSystemCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NotificationEventCode notification_code = 2;
 * @return {!proto.generic.events.v1.NotificationEventCode}
 */
proto.generic.events.v1.EventType.prototype.getNotificationCode = function() {
  return /** @type {!proto.generic.events.v1.NotificationEventCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.generic.events.v1.NotificationEventCode} value
 * @return {!proto.generic.events.v1.EventType} returns this
 */
proto.generic.events.v1.EventType.prototype.setNotificationCode = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.generic.events.v1.EventType.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.generic.events.v1.EventType} returns this
 */
proto.generic.events.v1.EventType.prototype.clearNotificationCode = function() {
  return jspb.Message.setOneofField(this, 2, proto.generic.events.v1.EventType.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.generic.events.v1.EventType.prototype.hasNotificationCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TodoEventCode todo_event_code = 3;
 * @return {!proto.generic.events.v1.TodoEventCode}
 */
proto.generic.events.v1.EventType.prototype.getTodoEventCode = function() {
  return /** @type {!proto.generic.events.v1.TodoEventCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.generic.events.v1.TodoEventCode} value
 * @return {!proto.generic.events.v1.EventType} returns this
 */
proto.generic.events.v1.EventType.prototype.setTodoEventCode = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.generic.events.v1.EventType.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.generic.events.v1.EventType} returns this
 */
proto.generic.events.v1.EventType.prototype.clearTodoEventCode = function() {
  return jspb.Message.setOneofField(this, 3, proto.generic.events.v1.EventType.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.generic.events.v1.EventType.prototype.hasTodoEventCode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.generic.events.v1.AggregateType = {
  AGGREGATE_TYPE_INVALID_UNSPECIFIED: 0,
  AGGREGATE_TYPE_SYSTEM: 1,
  AGGREGATE_TYPE_NOTIFICATION: 2,
  AGGREGATE_TYPE_TODO: 3
};

goog.object.extend(exports, proto.generic.events.v1);
