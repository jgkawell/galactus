// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: core/registry/v1/models.proto

package v1

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// deregister vs unregister reference: https://grammarhow.com/unregister-vs-deregister/
type ServiceStatus int32

const (
	ServiceStatus_SERVICE_STATUS_UNSPECIFIED  ServiceStatus = 0
	ServiceStatus_SERVICE_STATUS_REGISTERED   ServiceStatus = 1
	ServiceStatus_SERVICE_STATUS_DEREGISTERED ServiceStatus = 2
	ServiceStatus_SERVICE_STATUS_HEALTHY      ServiceStatus = 3
	ServiceStatus_SERVICE_STATUS_UNHEALTHY    ServiceStatus = 4
)

// Enum value maps for ServiceStatus.
var (
	ServiceStatus_name = map[int32]string{
		0: "SERVICE_STATUS_UNSPECIFIED",
		1: "SERVICE_STATUS_REGISTERED",
		2: "SERVICE_STATUS_DEREGISTERED",
		3: "SERVICE_STATUS_HEALTHY",
		4: "SERVICE_STATUS_UNHEALTHY",
	}
	ServiceStatus_value = map[string]int32{
		"SERVICE_STATUS_UNSPECIFIED":  0,
		"SERVICE_STATUS_REGISTERED":   1,
		"SERVICE_STATUS_DEREGISTERED": 2,
		"SERVICE_STATUS_HEALTHY":      3,
		"SERVICE_STATUS_UNHEALTHY":    4,
	}
)

func (x ServiceStatus) Enum() *ServiceStatus {
	p := new(ServiceStatus)
	*p = x
	return p
}

func (x ServiceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_core_registry_v1_models_proto_enumTypes[0].Descriptor()
}

func (ServiceStatus) Type() protoreflect.EnumType {
	return &file_core_registry_v1_models_proto_enumTypes[0]
}

func (x ServiceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceStatus.Descriptor instead.
func (ServiceStatus) EnumDescriptor() ([]byte, []int) {
	return file_core_registry_v1_models_proto_rawDescGZIP(), []int{0}
}

type ServerKind int32

const (
	ServerKind_SERVER_KIND_UNSPECIFIED ServerKind = 0
	ServerKind_SERVER_KIND_GRPC        ServerKind = 1
	ServerKind_SERVER_KIND_HTTP        ServerKind = 2
)

// Enum value maps for ServerKind.
var (
	ServerKind_name = map[int32]string{
		0: "SERVER_KIND_UNSPECIFIED",
		1: "SERVER_KIND_GRPC",
		2: "SERVER_KIND_HTTP",
	}
	ServerKind_value = map[string]int32{
		"SERVER_KIND_UNSPECIFIED": 0,
		"SERVER_KIND_GRPC":        1,
		"SERVER_KIND_HTTP":        2,
	}
)

func (x ServerKind) Enum() *ServerKind {
	p := new(ServerKind)
	*p = x
	return p
}

func (x ServerKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerKind) Descriptor() protoreflect.EnumDescriptor {
	return file_core_registry_v1_models_proto_enumTypes[1].Descriptor()
}

func (ServerKind) Type() protoreflect.EnumType {
	return &file_core_registry_v1_models_proto_enumTypes[1]
}

func (x ServerKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerKind.Descriptor instead.
func (ServerKind) EnumDescriptor() ([]byte, []int) {
	return file_core_registry_v1_models_proto_rawDescGZIP(), []int{1}
}

type ConsumerKind int32

const (
	ConsumerKind_CONSUMER_KIND_UNSPECIFIED ConsumerKind = 0
	// CONSUMER_KIND_ONE means that only one replica of the microservice will consume the event
	ConsumerKind_CONSUMER_KIND_ONE ConsumerKind = 1
	// CONSUMER_KIND_ALL means that all replicas of the microservice will consume the event
	ConsumerKind_CONSUMER_KIND_ALL ConsumerKind = 2
)

// Enum value maps for ConsumerKind.
var (
	ConsumerKind_name = map[int32]string{
		0: "CONSUMER_KIND_UNSPECIFIED",
		1: "CONSUMER_KIND_ONE",
		2: "CONSUMER_KIND_ALL",
	}
	ConsumerKind_value = map[string]int32{
		"CONSUMER_KIND_UNSPECIFIED": 0,
		"CONSUMER_KIND_ONE":         1,
		"CONSUMER_KIND_ALL":         2,
	}
)

func (x ConsumerKind) Enum() *ConsumerKind {
	p := new(ConsumerKind)
	*p = x
	return p
}

func (x ConsumerKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsumerKind) Descriptor() protoreflect.EnumDescriptor {
	return file_core_registry_v1_models_proto_enumTypes[2].Descriptor()
}

func (ConsumerKind) Type() protoreflect.EnumType {
	return &file_core_registry_v1_models_proto_enumTypes[2]
}

func (x ConsumerKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsumerKind.Descriptor instead.
func (ConsumerKind) EnumDescriptor() ([]byte, []int) {
	return file_core_registry_v1_models_proto_rawDescGZIP(), []int{2}
}

type Registration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the table primary key
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// NOTE: name + version + domain must be unique
	// the service domain
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// the service name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// the service version
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// the service status
	Status ServiceStatus `protobuf:"varint,5,opt,name=status,proto3,enum=core.registry.v1.ServiceStatus" json:"status,omitempty"`
}

func (x *Registration) Reset() {
	*x = Registration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_registry_v1_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Registration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registration) ProtoMessage() {}

func (x *Registration) ProtoReflect() protoreflect.Message {
	mi := &file_core_registry_v1_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registration.ProtoReflect.Descriptor instead.
func (*Registration) Descriptor() ([]byte, []int) {
	return file_core_registry_v1_models_proto_rawDescGZIP(), []int{0}
}

func (x *Registration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Registration) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Registration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Registration) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Registration) GetStatus() ServiceStatus {
	if x != nil {
		return x.Status
	}
	return ServiceStatus_SERVICE_STATUS_UNSPECIFIED
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the table primary key
	Id     string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Scheme string     `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Host   string     `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port   string     `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	Route  string     `protobuf:"bytes,5,opt,name=route,proto3" json:"route,omitempty"`
	Kind   ServerKind `protobuf:"varint,6,opt,name=kind,proto3,enum=core.registry.v1.ServerKind" json:"kind,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_registry_v1_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_core_registry_v1_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_core_registry_v1_models_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Server) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Server) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Server) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *Server) GetKind() ServerKind {
	if x != nil {
		return x.Kind
	}
	return ServerKind_SERVER_KIND_UNSPECIFIED
}

type Consumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the table primary key
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// event_source is the source of events the consumer is listening for
	EventSource string `protobuf:"bytes,2,opt,name=event_source,json=eventSource,proto3" json:"event_source,omitempty"`
	// event_type is the type of event the consumer is listening for: when empty, the consumer is listening for all events
	// of the given event_source
	EventType string       `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Kind      ConsumerKind `protobuf:"varint,4,opt,name=kind,proto3,enum=core.registry.v1.ConsumerKind" json:"kind,omitempty"`
}

func (x *Consumer) Reset() {
	*x = Consumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_registry_v1_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consumer) ProtoMessage() {}

func (x *Consumer) ProtoReflect() protoreflect.Message {
	mi := &file_core_registry_v1_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consumer.ProtoReflect.Descriptor instead.
func (*Consumer) Descriptor() ([]byte, []int) {
	return file_core_registry_v1_models_proto_rawDescGZIP(), []int{2}
}

func (x *Consumer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Consumer) GetEventSource() string {
	if x != nil {
		return x.EventSource
	}
	return ""
}

func (x *Consumer) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Consumer) GetKind() ConsumerKind {
	if x != nil {
		return x.Kind
	}
	return ConsumerKind_CONSUMER_KIND_UNSPECIFIED
}

var File_core_registry_v1_models_proto protoreflect.FileDescriptor

var file_core_registry_v1_models_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08,
	0x12, 0x04, 0x75, 0x75, 0x69, 0x64, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0xb9,
	0x19, 0x07, 0x0a, 0x05, 0x5a, 0x03, 0x69, 0x64, 0x78, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xba, 0xb9, 0x19, 0x07, 0x0a, 0x05, 0x5a, 0x03, 0x69, 0x64, 0x78, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0xb9, 0x19, 0x07, 0x0a, 0x05, 0x5a, 0x03, 0x69, 0x64, 0x78,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xb8, 0x01, 0x0a, 0x06, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x12, 0x04, 0x75, 0x75, 0x69, 0x64, 0x28,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x3a, 0x06, 0xba,
	0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e,
	0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x12, 0x04, 0x75, 0x75, 0x69, 0x64, 0x28, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4b, 0x69,
	0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01,
	0x2a, 0xa9, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x03, 0x12, 0x1c,
	0x0a, 0x18, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x04, 0x2a, 0x55, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x48, 0x54, 0x54,
	0x50, 0x10, 0x02, 0x2a, 0x5b, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f,
	0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f, 0x4b,
	0x49, 0x4e, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e,
	0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x02,
	0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a,
	0x67, 0x6b, 0x61, 0x77, 0x65, 0x6c, 0x6c, 0x2f, 0x67, 0x61, 0x6c, 0x61, 0x63, 0x74, 0x75, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_registry_v1_models_proto_rawDescOnce sync.Once
	file_core_registry_v1_models_proto_rawDescData = file_core_registry_v1_models_proto_rawDesc
)

func file_core_registry_v1_models_proto_rawDescGZIP() []byte {
	file_core_registry_v1_models_proto_rawDescOnce.Do(func() {
		file_core_registry_v1_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_registry_v1_models_proto_rawDescData)
	})
	return file_core_registry_v1_models_proto_rawDescData
}

var file_core_registry_v1_models_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_core_registry_v1_models_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_core_registry_v1_models_proto_goTypes = []interface{}{
	(ServiceStatus)(0),   // 0: core.registry.v1.ServiceStatus
	(ServerKind)(0),      // 1: core.registry.v1.ServerKind
	(ConsumerKind)(0),    // 2: core.registry.v1.ConsumerKind
	(*Registration)(nil), // 3: core.registry.v1.Registration
	(*Server)(nil),       // 4: core.registry.v1.Server
	(*Consumer)(nil),     // 5: core.registry.v1.Consumer
}
var file_core_registry_v1_models_proto_depIdxs = []int32{
	0, // 0: core.registry.v1.Registration.status:type_name -> core.registry.v1.ServiceStatus
	1, // 1: core.registry.v1.Server.kind:type_name -> core.registry.v1.ServerKind
	2, // 2: core.registry.v1.Consumer.kind:type_name -> core.registry.v1.ConsumerKind
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_core_registry_v1_models_proto_init() }
func file_core_registry_v1_models_proto_init() {
	if File_core_registry_v1_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_registry_v1_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Registration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_registry_v1_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_registry_v1_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_registry_v1_models_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_registry_v1_models_proto_goTypes,
		DependencyIndexes: file_core_registry_v1_models_proto_depIdxs,
		EnumInfos:         file_core_registry_v1_models_proto_enumTypes,
		MessageInfos:      file_core_registry_v1_models_proto_msgTypes,
	}.Build()
	File_core_registry_v1_models_proto = out.File
	file_core_registry_v1_models_proto_rawDesc = nil
	file_core_registry_v1_models_proto_goTypes = nil
	file_core_registry_v1_models_proto_depIdxs = nil
}
